{"version":3,"sources":["components/Container/Container.js","components/TodoList/TodoList.js","components/TodoEditor/TodoEditor.js","components/Filter.js","App.js","index.js"],"names":["Container","children","className","TodoList","todos","onDeleteTodo","onToggleCompleted","map","id","text","completed","classNames","type","checked","onChange","onClick","TodoEditor","state","message","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","this","Component","Filter","App","initialTodos","filter","addTodo","todo","shortid","generate","deleteTodo","todoId","prevState","toggleCompleted","changeFilter","getVisibleTodos","normalizedFilter","toLowerCase","includes","calculateCompletedTodos","reduce","total","totalTodoCount","length","completedTodoCount","visibleTodos","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11ce3dc5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Container.css\";\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","// import React from 'react';\n// import './TodoList.css';\n\n// const TodoList = ({ todos, onDeleteTodo }) => (\n//   <ul className=\"TodoList\">\n//     {todos.map(({ id, text }) => (\n//       <li key={id} className=\"TodoList__item\">\n//         <p className=\"TodoList__text\">{text}</p>\n//         <button onClick={() => onDeleteTodo(id)}>Удалить</button>\n//       </li>\n//     ))}\n//   </ul>\n// );\n\n// export default TodoList;\n\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport \"./TodoList.css\";\n\nconst TodoList = ({ todos, onDeleteTodo, onToggleCompleted }) => (\n  <ul className=\"TodoList\">\n    {todos.map(({ id, text, completed }) => (\n      <li\n        key={id}\n        className={classNames(\"TodoList__item\", {\n          \"TodoList__item--completed\": completed,\n        })}\n      >\n        <input\n          type=\"checkbox\"\n          className=\"TodoList__checkbox\"\n          checked={completed}\n          onChange={() => onToggleCompleted(id)}\n        />\n        <p className=\"TodoList__text\">{text}</p>\n        <button\n          type=\"button\"\n          className=\"TodoList__btn\"\n          onClick={() => onDeleteTodo(id)}\n        >\n          Удалить\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default TodoList;\n","import React, { Component } from \"react\";\nimport \"./TodoEditor.css\";\n\nclass TodoEditor extends Component {\n  state = {\n    message: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({ message: e.currentTarget.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state.message);\n\n    this.setState({ message: \"\" });\n  };\n\n  render() {\n    return (\n      <form className=\"TodoEditor\" onSubmit={this.handleSubmit}>\n        <textarea\n          className=\"TodoEditor__textarea\"\n          value={this.state.message}\n          onChange={this.handleChange}\n        ></textarea>\n        <button type=\"submit\" className=\"TodoEditor__button\">\n          Сохранить\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default TodoEditor;\n","import React from \"react\";\n\nconst Filter = ({ value, onChange }) => (\n  <label>\n    Фильтр по имени\n    <input type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\n// import Counter from './components/Counter';\n// import Dropdown from './components/Dropdown';\n// import ColorPicker from './components/ColorPicker';\nimport Container from \"./components/Container\";\nimport TodoList from \"./components/TodoList\";\nimport TodoEditor from \"./components/TodoEditor\";\nimport Filter from \"./components/Filter\";\n// import Form from './components/Form';\nimport initialTodos from \"./todos.json\";\n\n// const colorPickerOptions = [\n//   { label: 'red', color: '#F44336' },\n//   { label: 'green', color: '#4CAF50' },\n//   { label: 'blue', color: '#2196F3' },\n//   { label: 'grey', color: '#607D8B' },\n//   { label: 'pink', color: '#E91E63' },\n//   { label: 'indigo', color: '#3F51B5' },\n// ];\n\nclass App extends Component {\n  state = {\n    todos: initialTodos,\n    filter: \"\",\n  };\n\n  addTodo = (text) => {\n    const todo = {\n      id: shortid.generate(),\n      text,\n      completed: false,\n    };\n\n    this.setState(({ todos }) => ({\n      todos: [todo, ...todos],\n    }));\n  };\n\n  deleteTodo = (todoId) => {\n    this.setState((prevState) => ({\n      todos: prevState.todos.filter((todo) => todo.id !== todoId),\n    }));\n  };\n\n  toggleCompleted = (todoId) => {\n    // this.setState(prevState => ({\n    //   todos: prevState.todos.map(todo => {\n    //     if (todo.id === todoId) {\n    //       return {\n    //         ...todo,\n    //         completed: !todo.completed,\n    //       };\n    //     }\n\n    //     return todo;\n    //   }),\n    // }));\n\n    this.setState(({ todos }) => ({\n      todos: todos.map((todo) =>\n        todo.id === todoId ? { ...todo, completed: !todo.completed } : todo\n      ),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleTodos = () => {\n    const { filter, todos } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return todos.filter((todo) =>\n      todo.text.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  calculateCompletedTodos = () => {\n    const { todos } = this.state;\n\n    return todos.reduce(\n      (total, todo) => (todo.completed ? total + 1 : total),\n      0\n    );\n  };\n\n  render() {\n    const { todos, filter } = this.state;\n    const totalTodoCount = todos.length;\n    const completedTodoCount = this.calculateCompletedTodos();\n    const visibleTodos = this.getVisibleTodos();\n    // const completedTodoCount = todos.reduce(\n    //   (total, todo) => (todo.completed ? total + 1 : total),\n    //   0,\n    // );\n\n    return (\n      <Container>\n        {/* <h1>Состояние компонента</h1> */}\n        {/* <Form onSubmit={ this.formSubmitHandler} /> */}\n        {/* <Counter initialValue={10} /> */}\n        {/* <Dropdown /> */}\n        {/* <ColorPicker options={colorPickerOptions} /> */}\n\n        <div>\n          <p>Общее кол-во: {totalTodoCount}</p>\n          <p>Кол-во выполненных: {completedTodoCount}</p>\n        </div>\n\n        <TodoEditor onSubmit={this.addTodo} />\n\n        <Filter value={filter} onChange={this.changeFilter} />\n\n        <TodoList\n          todos={visibleTodos}\n          onDeleteTodo={this.deleteTodo}\n          onToggleCompleted={this.toggleCompleted}\n        />\n\n        {/* <TodoList todos={todos} onDeleteTodo={this.deleteTodo} /> */}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}